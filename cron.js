import fetchTrends from './trends.js'; // Make sure this exists and works import fs from 'fs/promises'; // Node.js file system access export default async function handler(req, res) { try { const now = new Date().toISOString(); console.log("🔁 Cron triggered at", now); const region = 'kenya'; // You can loop through more regions if needed const hashtags = await fetchTrends(region); // Gets trends from scraper const cache = { timestamp: now, region, hashtags }; // ✅ Save to local cache file — create ./cache folder manually if it doesn’t exist await fs.writeFile(`./cache/hashtags-${region}.json`, JSON.stringify(cache, null, 2)); console.log(`✅ Hashtags saved to ./cache/hashtags-${region}.json`); // Return preview for observability res.status(200).json({ message: "Cron ran successfully", timestamp: now, preview: hashtags.slice(0, 5) }); } catch (error) { console.error("🚨 Cron failure:", error); res.status(500).json({ error: "Cron execution failed", details: error.message || "Unknown error" }); } } 
