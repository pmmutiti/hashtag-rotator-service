
🌍 Region detection via locale or fallback🔁 Rotating hashtag logic with smooth intervals🧵 Live trend injection support (mocked for now)🎯 Designed for civic visibility and remixability // trends.js // 🗣️ Civic Tech Hashtag Rotator - Region-Aware & Fully Commented // MIT License — Free to remix, reuse, and improve const REGION_MAP = { 'ke': ['#KenyaDecides', '#NairobiUpdates', '#BungeWatch'], 'ng': ['#NaijaTrending', '#OpenGovNG', '#LagosBuzz'], 'za': ['#MzansiVoices', '#SAParliament', '#CapeTownToday'], 'default': ['#CivicEngage', '#AccountabilityNow', '#OpenData'] }; // 🌍 Get region from user's locale or default to 'ke' function getRegion() { try { const locale = navigator.language.toLowerCase(); const code = locale.split('-')[1] || locale; return REGION_MAP[code] ? code : 'default'; } catch (e) { console.warn('Region detection failed:', e); return 'default'; } } // 🔁 Rotate hashtags function startHashtagRotation(containerId, interval = 3000) { const region = getRegion(); const hashtags = REGION_MAP[region]; let index = 0; const container = document.getElementById(containerId); if (!container) { console.error(`Container #${containerId} not found`); return; } container.textContent = hashtags[index]; setInterval(() => { index = (index + 1) % hashtags.length; container.textContent = hashtags[index]; }, interval); } // 🧵 Optional: Inject live trends from API (mocked here) async function injectLiveTrends(regionCode) { try { // Replace with real fetch from your civic backend const response = await fetch(`/api/trends?region=${regionCode}`); const data = await response.json(); if (Array.isArray(data.hashtags)) { REGION_MAP[regionCode] = data.hashtags; } } catch (err) { console.error('Live trend fetch failed:', err); } } // 👟 Initialize on load window.addEventListener('DOMContentLoaded', () => { startHashtagRotation('hashtag-container'); }); 
